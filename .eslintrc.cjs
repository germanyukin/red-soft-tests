module.exports = {
  parser: '@babel/eslint-parser',
  env: {
    browser: true,
    node: true,
    es2021: true,
    commonjs: true,
  },
  parserOptions: {
    ecmaVersion: 12,
    sourceType: 'module',
    requireConfigFile: false,
  },
  plugins: ['import'],
  globals: {
    document: 'readonly',
    navigator: 'readonly',
    window: 'readonly',
  },
  rules: {
    // Possible Errors
    // https://eslint.org/docs/rules/#possible-errors

    'for-direction': 'error',
    'getter-return': ['error', { allowImplicit: true }],
    'no-async-promise-executor': 'error',
    // 'no-await-in-loop': 'off',
    'no-compare-neg-zero': 'error',
    'no-cond-assign': 'error',
    'no-console': 'warn',
    'no-constant-condition': 'error',
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-dupe-args': 'error',
    'no-dupe-else-if': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-empty': 'error',
    'no-empty-character-class': 'error',
    'no-ex-assign': 'error',
    'no-extra-boolean-cast': 'error',
    'no-extra-parens': ['error', 'functions'],
    'no-extra-semi': 'error',
    'no-func-assign': 'error',
    'no-import-assign': 'error',
    'no-inner-declarations': 'error',
    'no-invalid-regexp': 'error',
    'no-irregular-whitespace': 'error',
    'no-loss-of-precision': 'error',
    'no-misleading-character-class': 'error',
    'no-obj-calls': 'error',
    // 'no-promise-executor-return': 'off',
    'no-prototype-builtins': 'error',
    'no-regex-spaces': 'error',
    'no-setter-return': 'error',
    'no-sparse-arrays': 'error',
    // 'no-template-curly-in-string': 'off',
    'no-unexpected-multiline': 'error',
    'no-unreachable': 'error',
    'no-unreachable-loop': 'error',
    'no-unsafe-finally': 'error',
    'no-unsafe-negation': 'error',
    // 'no-unsafe-optional-chaining': 'off',
    // 'no-useless-backreference': 'off',
    // 'require-atomic-updates': 'off',
    'use-isnan': 'error',
    'valid-typeof': ['error', { requireStringLiterals: true }],


    // Best Practices
    // https://eslint.org/docs/rules/#best-practices

    'accessor-pairs': 'error',
    'array-callback-return': ['error', { allowImplicit: true }],
    'block-scoped-var': 'error',
    'class-methods-use-this': 'error',
    // 'complexity': 'off',
    // 'consistent-return': 'off',
    curly: ['error', 'multi-line'],
    // 'default-case': 'off',
    // 'default-case-last': 'off',
    // 'default-param-last': 'off',
    'dot-location': ['error', 'property'],
    'dot-notation': 'error',
    eqeqeq: ['error', 'always', { null: 'ignore' }],
    // 'grouped-accessor-pairs': 'off',
    'guard-for-in': 'error',
    'max-classes-per-file': ['error', 1],
    // 'no-alert': 'off',
    'no-caller': 'error',
    'no-case-declarations': 'error',
    // 'no-constructor-return': 'off',
    // 'no-div-regex': 'off',
    'no-else-return': ['error', { allowElseIf: false }],
    'no-empty-function': ['error', {
      allow: [
        'functions',
        'arrowFunctions',
        'methods',
      ],
    }],
    'no-empty-pattern': 'error',
    // 'no-eq-null': 'off',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-label': 'error',
    'no-fallthrough': 'error',
    'no-floating-decimal': 'error',
    'no-global-assign': 'error',
    // 'no-implicit-coercion': 'off',
    // 'no-implicit-globals': 'off',
    'no-implied-eval': 'error',
    'no-invalid-this': 'error',
    'no-iterator': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-loop-func': 'error',
    // 'no-magic-numbers': 'off',
    'no-multi-spaces': ['error', { ignoreEOLComments: true }],
    'no-multi-str': 'error',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-wrappers': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    // 'no-param-reassign': 'off',
    'no-proto': 'error',
    'no-redeclare': 'error',
    // 'no-restricted-properties': 'off',
    'no-return-assign': 'error',
    'no-return-await': 'error',
    'no-script-url': 'error',
    'no-self-assign': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-throw-literal': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-unused-expressions': ['error', {
      allowShortCircuit: true,
      allowTernary: true,
      allowTaggedTemplates: true,
    }],
    'no-unused-labels': 'error',
    'no-useless-call': 'error',
    'no-useless-catch': 'error',
    'no-useless-concat': 'error',
    'no-useless-escape': 'error',
    'no-useless-return': 'error',
    'no-void': 'error',
    // 'no-warning-comments': 'off',
    'no-with': 'error',
    // 'prefer-named-capture-group': 'off',
    'prefer-promise-reject-errors': ['error', { allowEmptyReject: true }],
    'prefer-regex-literals': ['error', { disallowRedundantWrapping: true }],
    // 'radix': 'off',
    // 'require-await': 'off',
    'vars-on-top': 'error',
    'wrap-iife': ['error', 'any', { functionPrototypeMethods: true }],
    yoda: 'error',


    // Strict Mode
    // https://eslint.org/docs/rules/#strict-mode

    strict: ['error', 'never'],


    // Variables
    // https://eslint.org/docs/rules/#variables

    // 'init-declarations': 'off',
    // 'no-catch-shadow': 'off',
    'no-delete-var': 'error',
    'no-label-var': 'error',
    // 'no-restricted-globals': 'off',
    'no-shadow': 'error',
    'no-shadow-restricted-names': 'error',
    'no-undef': 'error',
    'no-undef-init': 'error',
    // 'no-undefined': 'off',
    'no-unused-vars': 'error',
    'no-use-before-define': ['error', { functions: false }],


    // Stylistic Issues
    // https://eslint.org/docs/rules/#stylistic-issues

    // 'array-bracket-newline': 'off',
    'array-bracket-spacing': ['error', 'never'],
    // 'array-element-newline': 'off',
    'block-spacing': ['error', 'always'],
    'brace-style': ['error', '1tbs', { allowSingleLine: true }],
    camelcase: ['error', {
      properties: 'never',
      ignoreGlobals: true,
    }],
    // 'capitalized-comments': 'off',
    'comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': 'error',
    'comma-style': 'error',
    'computed-property-spacing': 'error',
    // 'consistent-this': 'off',
    'eol-last': 'error',
    'func-call-spacing': 'error',
    // 'func-name-matching': 'off',
    // 'func-names': 'off',
    // 'func-style': 'off',
    // 'function-call-argument-newline': 'off',
    'function-paren-newline': ['off', 'consistent'],
    // 'id-denylist': 'off',
    // 'id-length': 'off',
    // 'id-match': 'off',
    'implicit-arrow-linebreak': 'error',
    indent: ['error', 2, {
      SwitchCase: 1,
      VariableDeclarator: 1,
      outerIIFEBody: 1,
      MemberExpression: 1,
      FunctionDeclaration: {
        parameters: 1,
        body: 1,
      },
      FunctionExpression: {
        parameters: 1,
        body: 1,
      },
      CallExpression: {
        arguments: 1,
      },
      ArrayExpression: 1,
      ObjectExpression: 1,
      ImportDeclaration: 1,
      flatTernaryExpressions: false,
      offsetTernaryExpressions: false,
      ignoredNodes: ['TemplateLiteral *'],
      ignoreComments: false,
    }],
    // 'jsx-quotes': 'off',
    'key-spacing': 'error',
    'keyword-spacing': 'error',
    // 'line-comment-position': 'off',
    'linebreak-style': 'error',
    // 'lines-around-comment': 'off',
    'lines-between-class-members': ['error', 'always', {
      exceptAfterSingleLine: true,
    }],
    // 'max-depth': 'off',
    'max-len': ['error', {
      code: 80,
      tabWidth: 2,
      ignorePattern: '^\\s*import',
      ignoreUrls: true,
      ignoreStrings: true,
      ignoreTemplateLiterals: true,
      ignoreRegExpLiterals: true,
    }],
    // 'max-lines': 'off',
    // 'max-lines-per-function': 'off',
    // 'max-nested-callbacks': 'off',
    // 'max-params': 'off',
    // 'max-statements': 'off',
    // 'max-statements-per-line': 'off',
    // 'multiline-comment-style': 'off',
    'multiline-ternary': ['error', 'always-multiline'],
    'new-cap': ['error', { capIsNew: false }],
    'new-parens': 'error',
    'newline-per-chained-call': ['error', { ignoreChainWithDepth: 4 }],
    'no-array-constructor': 'error',
    // 'no-bitwise': 'off',
    // 'no-continue': 'off',
    // 'no-inline-comments': 'off',
    // 'no-lonely-if': 'off',
    'no-mixed-operators': ['error', {
      groups: [
        ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
        ['&&', '||'],
        ['in', 'instanceof'],
      ],
      allowSamePrecedence: true,
    }],
    'no-mixed-spaces-and-tabs': 'error',
    'no-multi-assign': 'error',
    'no-multiple-empty-lines': ['error', { max: 2 }],
    // 'no-negated-condition': 'off',
    'no-nested-ternary': 'error',
    'no-new-object': 'error',
    // 'no-plusplus': 'off',
    // 'no-restricted-syntax': 'off',
    'no-tabs': 'error',
    // 'no-ternary': 'off',
    'no-trailing-spaces': 'error',
    // 'no-underscore-dangle': 'off',
    'no-unneeded-ternary': ['error', { defaultAssignment: false }],
    'no-whitespace-before-property': 'error',
    'nonblock-statement-body-position': 'error',
    'object-curly-newline': ['error', {
      multiline: true,
      consistent: true,
    }],
    'object-curly-spacing': ['error', 'always'],
    'object-property-newline': ['error', {
      allowAllPropertiesOnSameLine: true,
    }],
    'one-var': ['error', 'never'],
    // 'one-var-declaration-per-line': 'off',
    // 'operator-assignment': 'off',
    'operator-linebreak': 'error',
    'padded-blocks': ['error', 'never'],
    // 'padding-line-between-statements': 'off',
    // 'prefer-exponentiation-operator': 'off',
    'prefer-object-spread': 'error',
    'quote-props': ['error', 'as-needed'],
    quotes: ['error', 'single', { allowTemplateLiterals: true }],
    semi: 'error',
    'semi-spacing': 'error',
    'semi-style': 'error',
    // 'sort-keys': 'off',
    // 'sort-vars': 'off',
    'space-before-blocks': 'error',
    'space-before-function-paren': ['error', {
      anonymous: 'always',
      named: 'never',
      asyncArrow: 'always',
    }],
    'space-in-parens': 'error',
    'space-infix-ops': 'error',
    'space-unary-ops': 'error',
    'spaced-comment': ['error', 'always'],
    'switch-colon-spacing': 'error',
    'template-tag-spacing': 'error',
    'unicode-bom': 'error',
    // 'wrap-regex': 'off',


    // ECMAScript 6
    // https://eslint.org/docs/rules/#ecmascript-6

    // 'arrow-body-style': 'off',
    'arrow-parens': ['error', 'always'],
    'arrow-spacing': 'error',
    'constructor-super': 'error',
    'generator-star-spacing': ['error', 'after'],
    'no-class-assign': 'error',
    // 'no-confusing-arrow': 'off',
    'no-const-assign': 'error',
    'no-dupe-class-members': 'error',
    // 'no-duplicate-imports': 'off',
    'no-new-symbol': 'error',
    // 'no-restricted-exports': 'off',
    // 'no-restricted-imports': 'off',
    'no-this-before-super': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-constructor': 'error',
    'no-useless-rename': 'error',
    'no-var': 'error',
    'object-shorthand': ['error', 'always', { avoidQuotes: true }],
    'prefer-arrow-callback': 'error',
    'prefer-const': ['error', {
      destructuring: 'all',
      ignoreReadBeforeAssign: true,
    }],
    'prefer-destructuring': ['error', {
      VariableDeclarator: {
        array: false,
        object: true,
      },
      AssignmentExpression: {
        array: true,
        object: false,
      },
    }, {
      enforceForRenamedProperties: false,
    }],
    'prefer-numeric-literals': 'error',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'require-yield': 'error',
    'rest-spread-spacing': 'error',
    // 'sort-imports': 'off',
    'symbol-description': 'error',
    'template-curly-spacing': 'error',
    'yield-star-spacing': ['error', 'after'],


    // eslint-plugin-import

    // Static analysis

    'import/no-unresolved': ['error', { commonjs: true }],
    'import/named': 'error',
    'import/default': 'error',
    // 'import/namespace': 'off',
    // 'import/no-restricted-paths': 'off',
    'import/no-absolute-path': 'error',
    'import/no-dynamic-require': 'error',
    // 'import/no-internal-modules': 'off',
    'import/no-webpack-loader-syntax': 'error',
    'import/no-self-import': 'error',
    'import/no-cycle': 'error',
    'import/no-useless-path-segments': ['error', { commonjs: true }],
    // 'import/no-relative-parent-imports': 'off',


    // Helpful warnings

    'import/export': 'error',
    'import/no-named-as-default': 'error',
    'import/no-named-as-default-member': 'error',
    // 'import/no-deprecated': 'off',
    // 'import/no-extraneous-dependencies': 'off', // ???
    'import/no-mutable-exports': 'error',
    // 'import/no-unused-modules': 'off',


    // Module systems

    // 'import/unambiguous': 'off',
    // 'import/no-commonjs': 'off',
    'import/no-amd': 'error',
    // 'import/no-nodejs-modules': 'off',
    // 'import/no-import-module-exports': 'off',


    // Style guide

    'import/first': 'error',
    // 'import/exports-last': 'off',
    'import/no-duplicates': 'error',
    // 'import/no-namespace': 'off',
    'import/extensions': ['error', 'always', { ignorePackages: true }],
    'import/order': ['error', { groups: ['builtin', 'external', 'internal'] }],
    'import/newline-after-import': 'error',
    // 'import/prefer-default-export': 'off',
    // 'import/max-dependencies': 'off',
    // 'import/no-unassigned-import': 'off',
    'import/no-named-default': 'error',
    'import/no-default-export': 'off',
    // 'import/no-named-export': 'off',
    // 'import/no-anonymous-default-export': 'off',
    // 'import/group-exports': 'off',
    // 'import/dynamic-import-chunkname': 'off',
  },
};
